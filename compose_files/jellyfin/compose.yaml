version: '3.9'
###
networks:
  traefik-net:
    external: true
###
services:
    jellyfin:
        image: jellyfin/jellyfin
        container_name: 'jellyfin'
        user: 4444:4444
        # Network mode of 'host' exposes the ports on the host. This is needed for DLNA access.
        #network_mode: 'host'
        networks:
          - traefik-net
        volumes:
          - /nfs/jellyfin/config:/config
          - /nfs/jellyfin/cache:/cache
          # Update this configuration as desired
          - /nfs/jellyfin/media:/media
        restart: always
        labels:
          - 'traefik.enable=true'
          ## HTTP Router
          #### Entry point where Jellyfin is accessible via
          #### Change secure to https in the line below to have accessible without needing to specify a port and change the SSLHost option below
          - 'traefik.http.routers.jellyfin.entryPoints=websecure'
          #### Host or Path where Jellyfin is accessible
          #### Remove (or change) this rule if you'd rather have Jellyfin accessible at a PathPrefix URI
          - 'traefik.http.routers.jellyfin.rule=Host(`jellyfin.lab.local`)' # OPTIONAL: && PathPrefix(`/jellyfin`)
          #### Enable TLS with the ACME/LetsEncrypt resolver for HOSTNAME.DOMAIN_NAME
          - 'traefik.http.routers.jellyfin.tls=true'
          ## Middleware
          - 'traefik.http.routers.jellyfin.middlewares=jellyfin-mw'
          #### The customResponseHeaders option lists the Header names and values to apply to the response.
          - 'traefik.http.middlewares.jellyfin-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
          #### The sslRedirect is set to true, then only allow https requests.
          - 'traefik.http.middlewares.jellyfin-mw.headers.SSLRedirect=true'
          #### The sslHost option is the host name that is used to redirect http requests to https.
          #### This is the exact URL that will be redirected to, so you can remove the :9999 port if using default SSL port
          - 'traefik.http.middlewares.jellyfin-mw.headers.SSLHost=jellyfin.lab.local'
          #### Set sslForceHost to true and set SSLHost to forced requests to use SSLHost even the ones that are already using SSL.
          #### Note that this uses SSLHost verbatim, so add the port to SSLHost if you are using an alternate port.
          - 'traefik.http.middlewares.jellyfin-mw.headers.SSLForceHost=true'
          #### The stsSeconds is the max-age of the Strict-Transport-Security header. If set to 0, would NOT include the header.
          - 'traefik.http.middlewares.jellyfin-mw.headers.STSSeconds=315360000'
          #### The stsIncludeSubdomains is set to true, the includeSubDomains directive will be
          #### appended to the Strict-Transport-Security header.
          - 'traefik.http.middlewares.jellyfin-mw.headers.STSIncludeSubdomains=true'
          #### Set stsPreload to true to have the preload flag appended to the Strict-Transport-Security header.
          - 'traefik.http.middlewares.jellyfin-mw.headers.STSPreload=true'
          #### Set forceSTSHeader to true, to add the STS header even when the connection is HTTP.
          - 'traefik.http.middlewares.jellyfin-mw.headers.forceSTSHeader=true'
          #### Set frameDeny to true to add the X-Frame-Options header with the value of DENY.
          - 'traefik.http.middlewares.jellyfin-mw.headers.frameDeny=true'
          #### Set contentTypeNosniff to true to add the X-Content-Type-Options header with the value nosniff.
          - 'traefik.http.middlewares.jellyfin-mw.headers.contentTypeNosniff=true'
          #### Set browserXssFilter to true to add the X-XSS-Protection header with the value 1; mode=block.
          - 'traefik.http.middlewares.jellyfin-mw.headers.customresponseheaders.X-XSS-PROTECTION=1'
          #### The customFrameOptionsValue allows the X-Frame-Options header value to be set with a custom value. This
          #### overrides the FrameDeny option.
          - "traefik.http.middlewares.jellyfin-mw.headers.customFrameOptionsValue='allow-from https://DOMAIN_NAME'"
          ## HTTP Service
          # We define the port here as a port is required, but note that the service is pointing to the service defined in @file
          #- 'traefik.http.routers.jellyfin.service=jellyfin-svc@file'
          - 'traefik.http.services.jellyfin-svc.loadBalancer.server.port=8096'
          - 'traefik.http.services.jellyfin-svc.loadBalancer.passHostHeader=true'
          ## Redirection of HTTP on port 9999 to HTTPS on port 9999 (consistent protocol)
          - 'traefik.http.routers.jellyfin-insecure.entryPoints=websecure'
          - 'traefik.http.routers.jellyfin-insecure.rule=Host(`jellyfin.lab.local`)' # OPTIONAL: && PathPrefix(`/jellyfin`)
          - 'traefik.http.routers.jellyfin-insecure.middlewares=jellyfin-insecure-mw'
          - 'traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.scheme=https'
          - 'traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.port' # remove if you are using a default port
          - 'traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.permanent=false'
          - 'traefik.http.routers.jellyfin-insecure.service=noop@internal'
